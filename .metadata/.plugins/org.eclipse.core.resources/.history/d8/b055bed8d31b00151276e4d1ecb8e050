import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;

import com.google.common.io.Files;
import com.google.common.io.PatternFilenameFilter;

public class RhUiModernizer {
	static Logger log = Logger.getLogger(RhUiModernizer.class.getName());

	public RhUiModernizer() {
	}

	public void run(String folder, String dfmFiles) {
		try {
			log.setLevel(Level.ALL);
			Path outputFileName = Paths.get(folder, "processedDfms.txt");
			File inputDirectory = new File(folder);
			PatternFilenameFilter dfmFileFilter = new PatternFilenameFilter(
					".*\\.dfm");
			File[] inputFiles = inputDirectory.listFiles(dfmFileFilter);
			if (inputFiles == null) {
				throw new IOException("Could not find input *.pos files in "
						+ folder);
			}
			log.info("Found " + inputFiles.length + " input files");
			File outputFile = new File(outputFileName.toString());
			Files.createParentDirs(outputFile);
			for (File input : inputFiles) {
				ProcessDfm(input.getAbsolutePath());				
			}
		} catch (IOException e) {
			log.severe(e.getMessage());
		}
	}
	
	private void ProcessDfm(String dfmFileName)
	{
		log.info("Processing " + dfmFileName);
	}
}
